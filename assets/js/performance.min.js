!function(){"use strict";function e(){if(!window.performance||!window.performance.timing)return void console.log("Page load time: Performance API not supported");const e=window.performance.timing.loadEventEnd-window.performance.timing.navigationStart;return console.log("Page load time: "+e+"ms"),e}function n(){const e=document.querySelectorAll('img[loading="lazy"]');if("loading"in HTMLImageElement.prototype)e.forEach(e=>{e.addEventListener("load",function(){this.classList.add("loaded")})});else{const n=new IntersectionObserver((e,n)=>{e.forEach(e=>{if(e.isIntersecting){const o=e.target;o.src=o.dataset.src||o.src,o.classList.add("loaded"),n.unobserve(o)}})});e.forEach(e=>n.observe(e))}}function o(){const e=document.getElementById("critical-css");e&&(e.rel="stylesheet")}window.performance&&window.performance.mark&&window.performance.mark("script-start"),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",function(){n(),o(),window.addEventListener("load",e)}):(n(),o(),e()),window.PerformanceUtils={calculatePageLoadTime:e,optimizeImages:n}}();